# Generated by Django 5.1.1 on 2024-09-25 14:49

import django.core.validators
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.forms.models
import wagtail.fields
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="FormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "seo_change_frequency",
                    models.IntegerField(
                        choices=[
                            (1, "Always"),
                            (2, "Hourly"),
                            (3, "Daily"),
                            (4, "Weekly"),
                            (5, "Monthly"),
                            (6, "Yearly"),
                            (7, "Never"),
                        ],
                        default=5,
                        help_text="<p>This value tells search engines how often a pageâ€™s content updates, offering a hint for crawling prioritization.</p>\n<p><strong>Always</strong>: This means the page is constantly changing with important, up-to-the-minute updates. \nA subreddit index page, a stock market data page, and the index page of a major news site might use this tag.</p>\n<p><strong>Hourly</strong>: The page is updated on an hourly basis or thereabouts.\n Major news sites, weather sites, and active web forums might use this tag.</p>\n<p><strong>Daily</strong>: The page is updated with new content on average once a day. \nSmall web forums, classified ad pages, daily newspapers, and daily blogs might use this tag for their homepage.</p>\n<p><strong>Weekly</strong>: The page is updated around once a week with new content. \nProduct info pages with daily pricing information, small blogs, and website directories use this tag.</p>\n<p><strong>Monthly</strong>: The page is updated around once a month; maybe more, maybe less. \nCategory pages, evergreen guides with updated information, and FAQs often use this tag.</p>\n<p><strong>Yearly</strong>: The page is rarely updated but may receive updates once or twice a year. \nMany static pages, such as registration pages, About pages, and privacy policies, fall into this category.</p>\n<p><strong>Never</strong>: The page is never going to be updated. \nOld blog entries, old news stories, and completely static pages fall into this category. </p>",
                        verbose_name="SEO change frequency",
                    ),
                ),
                (
                    "seo_priority",
                    models.DecimalField(
                        decimal_places=1,
                        default=0.5,
                        help_text="\nThis value signals the importance of a page to search engines. \nAssigning accurate priority values to key pages of your site can help search engines understand \nthe structure and hierarchy of your content.\nThis must be a number between 0.1 - 1.0.\n",
                        max_digits=2,
                        validators=[
                            django.core.validators.MaxValueValidator(Decimal("1.0")),
                            django.core.validators.MinValueValidator(Decimal("0.1")),
                        ],
                        verbose_name="SEO priority",
                    ),
                ),
                ("body", wagtail.fields.RichTextField(blank=True)),
                (
                    "confirmation_slug",
                    models.TextField(
                        default="confirmation",
                        help_text="\nThe slug to associate with the post-submission page. Defaults to `confirmation`.\n",
                    ),
                ),
                (
                    "confirmation_panel_title",
                    models.TextField(
                        blank=True,
                        help_text="\nThe title to associate with the main panel on the post-submission page.\n",
                    ),
                ),
                (
                    "confirmation_panel_text",
                    models.TextField(
                        blank=True,
                        help_text="\nThe text to place within the main panel on the post-submission page.\n",
                    ),
                ),
                (
                    "confirmation_body",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="\nThe main body of text to place on the post-submission page.\n",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="FormField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "clean_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Safe name of the form field, the label converted to ascii_snake_case",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="The label of the form field",
                        max_length=255,
                        verbose_name="label",
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("singleline", "Single line text"),
                            ("multiline", "Multi-line text"),
                            ("email", "Email"),
                            ("number", "Number"),
                            ("url", "URL"),
                            ("checkbox", "Checkbox"),
                            ("checkboxes", "Checkboxes"),
                            ("dropdown", "Drop down"),
                            ("multiselect", "Multiple select"),
                            ("radio", "Radio buttons"),
                            ("date", "Date"),
                            ("datetime", "Date/time"),
                            ("hidden", "Hidden field"),
                        ],
                        max_length=16,
                        verbose_name="field type",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(default=True, verbose_name="required"),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.",
                        verbose_name="choices",
                    ),
                ),
                (
                    "default_value",
                    models.TextField(
                        blank=True,
                        help_text="Default value. Comma or new line separated values supported for checkboxes.",
                        verbose_name="default value",
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="help text"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_fields",
                        to="forms.formpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
