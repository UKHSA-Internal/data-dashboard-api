name: Deploy to ECR

on: push

env:
  APIENV: "PROD"
  AWS_REGION: "eu-west-2"
  POSTGRES_HOST: "wp-dashboard-rds-2.cao5mkmud7br.eu-west-2.rds.amazonaws.com"
  POSTGRES_USER: "wp_user"
  POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
  POSTGRES_DB: "winterpressures"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:

  ###############################################################################
  # Install dependencies & build packages
  ###############################################################################

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt


  ###############################################################################
  # Unit tests
  ###############################################################################

  unit-tests:
    name: Unit tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
      - uses: actions/checkout@v3
      - name: Run unit tests with pytest
        run: python -m pytest tests/unit/ -v

  ###############################################################################
  # Deploy
  ###############################################################################

  deploy:
    
    name: ECR Image Push
    needs: [unit-tests]
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          role-to-assume: arn:aws:iam::518944279943:role/devops_github_actions_wp_api
          role-session-name: testsession
          aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: wp-api
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG